Ext.Loader.setConfig({
    enabled: true,
    paths: {
         'app': '/scripts/app',
        'Ext.ux.touch.grid': '/scripts/app/ux/grid'
    }
});

Ext.application({
    glossOnIcon: false,

    icon: {
        57: '/content/img/icon.png',
        72: '/content/img/icon@72.png',
        114: '/content/img/icon@2x.png',
        144: '/content/img/icon@114.png'
    },

    phoneStartupScreen: '/content/img/loading/Homescreen.jpg',
    tabletStartupScreen: '/content/img/loading/Homescreen~ipad.jpg',

    requires: [
        'app.models.ModuleModel',
        'app.modules.MyPassword',
        'Ext.tab.Panel',
        'Ext.Toolbar',
        'app.ux.field.ToggleBool'
    ],

    launch: function () {
        Ext.Viewport.add([
            {
                xtype: "picker",
                itemId: "opsPicker",
                doneButton: '关闭',
                cancelButton: false,
                useTitles: false,
                hidden: true,
                slots: [
                    {
                        name: "ops",
                        listeners:
                        {
                            itemtap:
                            {
                                scope: this,
                                fn: function (view, index, target, record, e, eOpts) {
                                    var value = record.get("value");

                                    switch (value) {
                                        case 50:
                                            {
                                                var myPassword = Ext.Viewport.down("#myPassword");

                                                if (!myPassword) {
                                                    var overlay = Ext.Viewport.add({
                                                        xtype: 'app.modules.MyPassword',
                                                        itemId: "myPassword"
                                                    });
                                                }
                                            } break;
                                        case 100:
                                            {
                                                util.ask("退出", "您确定要退出系统吗？", function () {
                                                    util.logout();
                                                });
                                            } break;
                                    }

                                    var picker = Ext.Viewport.down("#opsPicker");
                                    picker.hide();
                                }
                            }
                        },
                        data: [
                            { text: '更改密码', value: 50 },
                            { text: '退出系统', value: 100 }
                        ]
                    }
                ]
            },

            {
                xtype: 'toolbar',
                itemId: "t_top",
                docked: 'top',

                scrollable: {
                    direction: 'horizontal',
                    indicators: false
                },

                items: [
                        {
                            xtype: "button",
                            ui: "action",
                            text: "菜单",
                            handler: function (btn) {
                                var picker = Ext.Viewport.down("#menusPicker");
                                picker.show();
                            }
                        },
                        { xtype: 'spacer' },
                        {
                            xtype: "segmentedbutton",
                            allowToggle: false,
                            itemId: "moduleActions"
                        },
                        { xtype: 'spacer' },
                        {
                            xtype: "button",
                            ui: "confirm-round",
                            text: "操作",
                            handler: function (btn) {
                                var picker = Ext.Viewport.down("#opsPicker");
                                picker.show();
                            }
                        }
                    ]
            }
            ]);

        this.loadModules();
    },
    loadModules: function () {
        var myStore = Ext.create('Ext.data.Store', {
            model: 'app.models.ModuleModel',
            proxy: {
                type: 'ajax',
                url: '/app/GetRootModules',
                actionMethods: { read: "POST" },
                reader: {
                    type: 'json'
                }
            },
            autoLoad: true,
            listeners:
            {
                beforeload: function (store, operation, eOpts) {
                    Ext.Viewport.setMasked({
                        xtype: 'loadmask',
                        message: '初始化...'
                    });
                },
                load:
                {
                    scope: this,
                    fn: function (store, records, successful, operation, eOpts) {
                        var menuItems = [];

                        Ext.each(records, function (record, index) {
                            var menuItem = { text: record.get("Name"), value: record.get("Class") };
                            menuItems.push(menuItem);
                        });

                        Ext.Viewport.add(
                            {
                                xtype: "picker",
                                itemId: "menusPicker",
                                doneButton: '关闭',
                                cancelButton: false,
                                fullscreen: true,
                                hidden: true,
                                slots: [
                                    {
                                        name: "menus",
                                        listeners:
                                        {
                                            itemtap:
                                            {
                                                scope: this,
                                                fn: function (view, index, target, record, e, eOpts) {
                                                    var existedName = this.module ? this.module.$className : null,
                                                        className = record.get("value");

                                                    if (!existedName || existedName != className) {
                                                        Ext.Viewport.removeInnerAt(0);

                                                        if (this.module) {
                                                            this.module.destroy();
                                                        }

                                                        var actions = Ext.Viewport.down("#moduleActions");
                                                        actions.removeAll();

                                                        this.module = Ext.create(className);
                                                    }

                                                    var picker = Ext.Viewport.down("#menusPicker");
                                                    picker.hide();
                                                }
                                            }
                                        },
                                        data: menuItems
                                    }
                                ]
                            });
                        Ext.Viewport.setMasked(false);
                    }
                }
            }
        });
    }
});
