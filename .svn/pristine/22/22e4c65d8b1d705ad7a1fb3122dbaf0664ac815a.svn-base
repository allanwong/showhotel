using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using System.Web.Mvc;
using Newtonsoft.Json.Linq;
using PettiInn.DAL.Manager.Core.Managers;
using PettiInn.SOA.DTO;

namespace PettiInn.API.Areas.Console.Controllers
{
    public class RoomTypeController : ControllerBase
    {
        [System.Web.Mvc.HttpPost]
        public JsonResult RoomTypes(int? hotelId)
        {
            var manager = this.GetManagerFor<IRoomTypeManager>();
            var result = manager.GetAll(hotelId).ToList();
            var resultDTOs = result.Select(t => new RoomTypeDTO(t));

            return Json(resultDTOs);
        }

        [System.Web.Mvc.HttpPost]
        public JsonResult GetRoomType(int id, IEnumerable<string> query)
        {
            var queries = new Query[] { };

            if (query != null)
            {
                queries = query.Select(q => new Query { Name = q }).ToArray();
            }

            var manager = this.GetManagerFor<IRoomTypeManager>();
            var result = manager.GetById(id);
            var resultDTO = new RoomTypeDTO(queries, result);

            return Json(resultDTO);
        }

        [System.Web.Mvc.HttpPost]
        public JsonResult Create(RoomTypeDTO dto)
        {
            var manager = this.GetManagerFor<IRoomTypeManager>();
            var result = manager.Create(dto);
            var resultDTO = new RoomTypeDTO(result);

            return Json(resultDTO);
        }

        [System.Web.Mvc.HttpPost]
        public JsonResult Update(RoomTypeDTO dto)
        {
            var manager = this.GetManagerFor<IRoomTypeManager>();
            var result = manager.Update(dto);
            var resultDTO = new RoomTypeDTO(result);

            return Json(resultDTO);
        }

        [System.Web.Mvc.HttpPost]
        public JsonResult Delete(RoomTypeDTO dto)
        {
            var manager = this.GetManagerFor<IRoomTypeManager>();
            var result = manager.Delete(dto.Id);
            var resultDTO = new RoomTypeDTO(result);

            return Json(resultDTO);
        }
    }
}
